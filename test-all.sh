#!/bin/bash


# Sean Szumlanski
# COP 3502, Spring 2017

# =======================
# SmartArray: test-all.sh
# =======================
# You can run this script at the command line like so:
#
#   bash test-all.sh
#
# For more details, see the assignment PDF.


NUM_TEST_CASES=10

for i in `seq -f "%02g" 0 $NUM_TEST_CASES`;
do
	echo -n "Checking testcase$i... "

	# Attempt to compile.
	gcc SmartArray.c testcase$i.c -lm 2> /dev/null
	compile_val=$?
	if [[ $compile_val != 0 ]]; then
		echo "fail (failed to compile)"
		continue
	fi

	# Run program. Capture return value to check whether it crashes.
	./a.out > myoutput$i.txt 2> /dev/null
	execution_val=$?
	if [[ $execution_val != 0 ]]; then
		echo "fail (program crashed)"
		continue
	fi

	# Run diff and capture its return value.
	diff myoutput$i.txt solutions/testcase$i-output.txt > /dev/null
	diff_val=$?
	
	# Output results based on diff's return value.
	if  [[ $diff_val != 0 ]]; then
		echo "fail (output does not match)"
	else
		echo "PASS!"
	fi
done

# Clean up the executable file.
rm -f a.out

# Clean up the output files generated by this script.
for i in `seq -f "%02g" 0 $NUM_TEST_CASES`;
do
	rm -f myoutput$i.txt
done

echo ""
echo "NOTE: For this to work, you need the following files in this directory:"
echo ""
echo "  SmartArray.c"
echo "  SmartArray.h"
echo "  names.txt"
echo "  test-all.sh"
echo "  testcase01.c through testcase24.c"
echo ""
echo "You will also need this directory to contain the folder called 'solutions',"
echo "which must contain testcase00-output.txt through testcase10-output.txt."
